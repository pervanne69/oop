from collections import deque


class Country:
    def __init__(self):
        self.color = -1
        self.borders = []


def coloring(countries: list[Country], st: int) -> None:
    """
    This function coloring our countries in both sides
    :param: countries - (list[Country]) - our countries
    :param: st(int) - index
    :return: Nothing to return
    """
    q = deque()
    q.append(st)
    countries[st].color = 0
    while q:
        v = q.popleft()
        for to in countries[v].borders:
            if countries[v].color == countries[to].color:
                print("-1")
                exit(0)
            if countries[to].color == -1:
                countries[to].color = 1 - countries[v].color
                q.append(to)


def main() -> None:
    """
    This is main function
    :return: Nothing to return
    """
    n = int(input())
    countries = [Country() for _ in range(n + 1)]
    for i in range(1, n + 1):
        e = input().split()
        for edge in e:
            edge = int(edge)
            if edge != 0:
                countries[i].borders.append(edge)
                countries[edge].borders.append(i)
    for i in range(1, n + 1):
        if countries[i].color == -1:
            coloring(countries, i)
        print(countries[i].color, end='')


if __name__ == "__main__":
    main()
