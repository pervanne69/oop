class Node:    def __init__(self):        self.v = []        self.visited = Falsedef dfs(n):    n.visited = True    for child in n.v:        if not child.visited and not dfs(child):            return True    return Falsedef main():    nodes = [Node() for _ in range(1001)]    n, k = map(int, input().split())    for _ in range(n-1):        x, y = map(int, input().split())        nodes[x].v.append(nodes[y])        nodes[y].v.append(nodes[x])    nodes[k].visited = True    min_val = 1001    for v in nodes[k].v:        if not dfs(v):            min_val = min(min_val, nodes.index(v))    if min_val != 1001:        print("First player wins flying to airport", min_val)    else:        print("First player loses")if __name__ == "__main__":    main()